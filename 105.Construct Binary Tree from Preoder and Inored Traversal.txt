public TreeNode buildTree(int[] preorder, int[] inorder){
       TreeNode res;
       int len = preorder.length;
       res = helpTree(preorder,0,len-1,inorder,0,len-1);
       return res;

   }
   private TreeNode helpTree(int[] pre,int prestart,int preend,int[] in, int instart, int inend){
       if(prestart>preend||instart>inend){
           return null;
       }
       int rootval = pre[prestart];
       int rootindex = 0;
       for(int i = instart;i<=inend;i++){
           if(in[i] == rootval){
               rootindex = i;
               break;
           }
       }
       TreeNode root = new TreeNode(rootval);
       int len = rootindex - instart;
       root.left = helpTree(pre,prestart+1,prestart+len,in,instart,rootindex-1);
       root.right = helpTree(pre,prestart+len+1,preend,in,rootindex+1,inend);
       return root;
   }