public int minPathSum(int[][] grid){
	    int m = grid.length;
	    int n = grid[0].length;
	    int[][] res = new int[m][n];
	    res[0][0] = grid[0][0];
	    for(int i = 0;i<m;i++){
	        for(int j = 0 ;j<n;j++){
	            if(i==0&&j>0){
	                res[i][j] = grid[i][j]+res[i][j-1];
                }
                else if(i>0&&j==0){
                    res[i][j] = res[i-1][j]+grid[i][j];
                }
                else if(i>0&&j>0){
                    int a = Math.min(res[i-1][j],res[i][j-1]);
                    res[i][j] = grid[i][j]+a;
                }
            }
        }
	    return res[m-1][n-1];
    }
    public int minPathSum2(int[][] grid){
        int m = grid.length;
        int n = grid[0].length;
        int[] res = new int[n];
        res[0] = grid[0][0];
        for(int i=0;i<m;i++){
            for(int j = 0;j<n;j++){
                if(i==0&&j>0){
                    res[j] = res[j-1]+grid[i][j];
                }
                if(i>0&&j==0){
                    res[j]=res[j]+grid[i][j];
                }
                else if(j>0){
                    int a = Math.min(res[j-1],res[j]);
                    res[j] = a + grid[i][j];
                }
            }
        }
        return res[n-1];
    }