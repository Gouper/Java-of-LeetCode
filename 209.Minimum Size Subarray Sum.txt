public int minSubArrayLen2(int s,int[] nums){
        if(nums.length<1) return 0;
        int[] sums = new int[nums.length];
        int ans = Integer.MAX_VALUE,sum=0;
        sums[0] = nums[0];
        for(int i=1;i<nums.length;i++){
            sums[i] = sums[i-1] + nums[i];
        }
        for(int i=0;i<nums.length;i++){
            for(int j=i;j<nums.length;j++){
                sum = sums[j] - sums[i] + nums[i];
                if(sum>=s){
                    ans = Math.min(ans,j-i+1);
                }
            }
        }
        return ans==Integer.MAX_VALUE?0:ans;
    }
    public int minSubArrayLen(int s,int[] nums){
        if(nums.length<1) return 0;
        int left = 0,sum = 0;
        int ans = Integer.MAX_VALUE;
        for(int i=0;i<nums.length;i++){
            sum = sum + nums[i];
            while(sum>=s){
                ans = Math.min(ans,i-left+1);
                sum = sum - nums[left++];
            }
        }
        return ans==Integer.MAX_VALUE?0:ans;
    }