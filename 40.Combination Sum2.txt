public List<List<Integer>> combinationSum2(int[] candidates, int target){
		Arrays.sort(candidates);
		List<List<Integer>> result = new ArrayList<List<Integer>>();
		List<Integer> pos = new ArrayList<Integer>();		
		getresult(result, pos, target, candidates, 0);
		return result;
	}
	private void getresult(List<List<Integer>> result, List<Integer> cur, int target, int[] candidates, int start) {
		if(target>0){
			for(int i = start;i<candidates.length&&target>=candidates[i];i++){
				cur.add(candidates[i]);
				getresult(result, cur, target-candidates[i], candidates, i+1);
				while(i+1<candidates.length){
					if(candidates[i+1]==candidates[i]){
						i++;
					}
					else {
						break;
					}
				}
				cur.remove(cur.size()-1);
			}
		}
		else if(target==0){
			result.add(new ArrayList<Integer>(cur));
		}
	}