public int lengthOfLongestSubstring(String s){
		int n = s.length();
		int i=0,j=0,result = 0;
		Set<Character> ss = new HashSet<Character>();
		while(i<n&&j<n){
			 if(!ss.contains(s.charAt(j))){
				 ss.add(s.charAt(j++));
				 result = Math.max(result, j-i);
			 }
			 else ss.remove(s.charAt(i++));
		}
		return result;
	}
	public int lengthOfLongestSubstring2(String s){
		int result = 0;
		int n = s.length();
		Map<Character, Integer> mm = new HashMap<Character, Integer>();
		int i = 0;
		for(int j=0;j<n;j++)
		{
			if(mm.containsKey(s.charAt(j))){
				i = Math.max(mm.get(s.charAt(j)), i);
			}
			mm.put(s.charAt(j), j+1);
			result = Math.max(result, j-i+1);		
			
		}
		
		return result;
	}